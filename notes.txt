

Notes:

	-Now uses square brackets for infix but tests don't all do that.

	-let's use ':' as the quote.

	-Tolerates [x], {x} and :[x] as proc argument lists.

	-** is not right-associative.

	-I think I'll bow to starting arrays with index 0.

	- Unary minus: space (e.g. "- 1") -> binary, no space (e.g. "-1") -> unary

	- if and while can take either a LoL or a single unquoted list as
	  an expression and either will be turned into a sub.  New subify
	  behaviour.
		-this applies to all subified functions.  Will probably also be default
		 behaviour for subified mproc arguments

	- okay, user-defined macros use the function arg convention.


Functions Todo:
X	-listSized



mprocs:

	form: mproc <name> [(<arg> <modifier>*) *] <body>

	modifiers:
		Sub [number]	-- If a list, subify's with number arguments.
		QuoteSym		-- If a symbol, quote
		QuoteList		-- If a list, quote
		Strict			-- Require that the other modifier activate.
		

=example

mproc map {
	Sub1 block
	items
} {
	var result = [listSized [block size]]
	var index = 0

	foreach item in items {
		result@index = [block item]
		index = index + 1
	}

	return result
}

=done

Todo:
	-implement a "compiler" to produce perl subs
	-catch arg. count mismatches.

X	- pod
X	- macros
		-subify
		-mprocs

	- namespaces
	- objects
	- integers

	- string interpolation
X		-\[nrfat] now works

	- What to do about user-defined operators?
	- handle unescaped operator in prefix LoL expression
	- allow _ in numbers
	- scientific notation

