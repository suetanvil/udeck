# Object-oriented itterative Fibonacci number calculation using the
# sequence protocol.

class FibonacciList {
	var first second index

	method size_get {} {return index}
	method isIndexable_get {} {return true}

	method _init {} {self->_reset}

	method _reset {} {
		first = 1
		second = 1
		index = 1
	}

	method at {index} {
		(index == 0) && [return 0]
		self->_update index
		return first
	}

	method _update {reqIndex} {
		(reqIndex > index) && [self->_reset]

		repeat (reqIndex - index) {
			var ns = first + second
			first = second
			second = ns
		}
	}
}


proc printFibs {count} {
	var fl = [FibonacciList->new]

	for n in (1 .. count) {
		say (fl@n) " "
	}
	puts
}

printFibs [str2num (Sys::Argv@0)]


