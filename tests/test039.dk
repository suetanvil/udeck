# Test macro definitions

macro foo {args} {
	puts "Macro 'foo' called with " args

	args@0 = :bar
	return args
}

proc bar {args} {
	puts "bar called with '" args "'"
}

foo 1 2 3 4 5


# Also test 'subify'
puts [subify :(a + 1) 1]
puts [subify :(foo + 1) :[foo]]
puts [subify :(foo + 1) :[bobo]]
puts [subify {var x = 42; return (a + b + x)} 3]

# And subifyOrDelay
puts [subifyOrDelay :(a + 1)]
puts [subifyOrDelay {var x = 42; return (a + b + x)}]
puts [subifyOrDelay 42]
puts [subifyOrDelay :someVariable]


# Also test that the first argument is a symbol.
macro bobo {mn a} {
	return [list :Lang::puts [quote mn] " " a]
}

bobo 42

const blort = bobo
blort 42