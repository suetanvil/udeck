# Test the 'printable' attribute and related code.

# But first...
# Test for wierd interpstring bug discovered here
puts "[" :"" "]"

# Test for string literal bug here.  Even sequences of single quotes
# are empty strings.
puts "[" '' "]"
puts "[" '''' "]"
puts "[" '''''''' "]"

puts

# Also test misc. string attributes
for i in :["a" "e" "i" "o" "u" "y" "x" "w" "z"
		   "A" "E" "I" "O" "U" ""
		   "Aasd" "Efes" "ieos" "Ousi" "Uisn"] \
	{
		var is = ""

		if (i.isVowel) {
			is = "is"
		} else {
			is = "is not"
		}
		puts "$i $is a vowel"
	}
puts

# Also, chr and ord.
for c in :[72 101 108 108 111 44 32 87 111 114 108 100 33 10] {
	say [chr c]
}
puts "10 encodes as [" [chr 10] "]"
puts "12345 encodes as [" [chr 12345] "]"

for s in :["a" "asfd" " asdr" "" "543"] {
	puts "'$s'.ord == " s.ord
}
puts



# Test isspace
for s in [list " " "   " "foo" " x " "" " \n" "\t"] {
	puts "'$s'.isSpace = " s.isSpace
}


# Onward to printable
puts Class.printable
puts String.printable
puts

class ConsonentClass {var x}
puts [ConsonentClass->new].printable
class AnotherVowelClass {var y}
puts [AnotherVowelClass->new].printable
class CIP {method printable_get{} {return "This class implements printable"}}
puts [CIP->new].printable
puts


puts "Hello, world!".printable

puts nil.printable

puts 42.printable

puts :some_symbol.printable

puts ::x.printable

puts [byteArray 1 2 3].printable
puts [byteArray 1 2 3 4].printable
puts [byteArray 1 2 3 4 5].printable
puts [byteArray 1 2 3 4 5 6].printable
puts [byteArray 1 2 3 4 5 6 7].printable
puts [byteArray 1 2 3 4 5 6 7 8].printable
puts [byteArray 1 2 3 4 5 6 7 8 9].printable

puts [list 1 2 {2\+1} 4 5].printable
puts [list 1 2 {2\+1} 4 5 6].printable
puts [list 1 2 {2\+1} 4 5 6 7].printable
puts [list 1 2 {2\+1} 4 5 6 7 8].printable
puts [list 1 2 {2\+1} 4 5 6 7 8 9].printable
puts [list 1 2 {2\+1} 4 5 6 7 8 9 10].printable

